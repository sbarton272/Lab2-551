/*** 18551 Homework 2 Starter Code ******/
#include <jni.h>
#include <android/log.h>
#include <opencv2/core/core.hpp>
#include <opencv2/imgproc/imgproc.hpp>
#include <opencv2/highgui/highgui.hpp>
#include <string>
#include <fstream>
#include <vector>
#include <tuple>

#include "com_spencerbarton_lab2_551_FaceRecognitionActivity.h"
#include "dirUtils.hpp"

using namespace cv;
using namespace std;

// ----- Helpers --------------

void save(const string &file_name,PCA pca_)
{
    FileStorage fs(file_name,FileStorage::WRITE);
    fs << "mean" << pca_.mean;
    fs << "e_vectors" << pca_.eigenvectors;
    fs << "e_values" << pca_.eigenvalues;
    fs.release();
}

PCA load(const string &file_name)
{
    PCA pca_;
    FileStorage fs(file_name,FileStorage::READ);
    fs["mean"] >> pca_.mean ;
    fs["e_vectors"] >> pca_.eigenvectors ;
    fs["e_values"] >> pca_.eigenvalues ;
    fs.release();
    return pca_;
}

// http://stackoverflow.com/questions/8322208/syntax-for-converting-jstring-and-appending
void getJStringContent(JNIEnv *AEnv, jstring AStr, string &ARes) {
  if (!AStr) {
    ARes.clear();
    return;
  }

  const char *s = AEnv->GetStringUTFChars(AStr,NULL);
  ARes=s;
  AEnv->ReleaseStringUTFChars(AStr,s);
}

// ----- Test --------------

JNIEXPORT jint JNICALL Java_com_spencerbarton_lab2_1551_FaceRecognitionActivity_IPCAtest
  (JNIEnv * env, jobject obj, jstring trainFolderPath, jstring imgName) {

    // Extract strings
    string path;
    getJStringContent(env, trainFolderPath, path);
    string test_name;
    getJStringContent(env, imgName, test_name);

    string msg = "Called with args:" + path + ", " + test_name;
    __android_log_write(ANDROID_LOG_INFO, "IPCAtest", msg.c_str());

    /* imgName is the path and filename of the test image */
    Mat im = imread(test_name, CV_LOAD_IMAGE_COLOR).reshape(1,1);

    float min_error = -1;
    string min_error_class;
    // Read the eigen vectors and means for each class from file
    // Project the input test image onto each eigen space and reconstruct
    // Compute the reconstruction error between the input test image and the reconstructed image
    // You can use euclidean distance (or any other appropriate distance measure)

    int err = map_files(path, [&im, &min_error, &min_error_class] (string pca_name, string path) {
        if (pca_name.size() < 4 || pca_name.substr(pca_name.size() - 4, 4).compare(".pca")) return 0;

        __android_log_write(ANDROID_LOG_INFO, "IPCAtest: pca_name ", pca_name.c_str());

        // cout << "pca path:" << path << pca_name << endl;
        PCA pca = load(path + pca_name);

        // cout << "im rows/cols" << im.rows << "," << im.cols << endl;
        // cout << "pca mean rows/cols" << pca.mean.rows << "," << pca.mean.cols << endl;
        // cout << "pca mean rows/cols" << pca.eigenvectors.rows << "," << pca.eigenvectors.cols << endl;
        Mat im_projected = pca.backProject(pca.project(im));
        // cout << im.type() << "im rows/cols" << im.rows << "," << im.cols << endl;
        // cout << im_projected.type() << "im_projected rows/cols" << im_projected.rows << "," << im_projected.cols << endl;

        im.convertTo(im, CV_32F);
        Mat diff_mat;
        absdiff(im, im_projected, diff_mat);

        float diff = sum(diff_mat)[0];
        if (min_error < 0 || diff < min_error) {
            min_error = diff;
            min_error_class = pca_name;
        }

        return 0;
    });
    if (err) {
        __android_log_write(ANDROID_LOG_INFO, "IPCAtest: %s", "Failed to train");
        return -1;
    }
    // return the class label corresponding to the eigen space which showed minimum reconstruction error
    min_error_class = min_error_class.substr(0, min_error_class.size() - 4);
    int out = -1;
    try {
        __android_log_write(ANDROID_LOG_INFO, "IPCAtest: Min err class", min_error_class.c_str());
        out = atoi(min_error_class.c_str());
    }
    catch(exception const & e)
    {
         // cout<<"error : " << e.what() <<endl;
    }
    __android_log_print(ANDROID_LOG_INFO, "IPCAtest", "Min err class %d", out);
    return out;
}

// ----- Train --------------

JNIEXPORT jint JNICALL Java_com_spencerbarton_lab2_1551_FaceRecognitionActivity_IPCAtrain
  (JNIEnv * env, jobject obj, jstring trainFolderPath, jint numPcaComp) {

    // Extract args
    string path;
    getJStringContent(env, trainFolderPath, path);
    int numComponents (numPcaComp);

    // Logging
    // TODO use https://www.crystax.net/android/ndk
    std::ostringstream ss;
    ss << numComponents;
    string msg = "Called with argsss:" + path + ", " + ss.str();
    __android_log_write(ANDROID_LOG_INFO, "IPCAtrain", msg.c_str());

    // Run a loop to iterate (or just map) over classes (people)
    int err =  map_dirs(path, [numComponents] (string dir_name, string path) {
        try {
            // TODO necessary?
            atoi(dir_name.c_str());
        }
        catch(exception const & e)
        {
             // cout<<"error : " << e.what() <<endl;
            return 0;
        }
        __android_log_write(ANDROID_LOG_INFO, "IPCAtrain: Training this directory", dir_name.c_str());
        //Run a loop to iterate over images (or map) of same person and generate the data matrix for the class
        vector<Mat> data;
        int err = map_files(path + dir_name, [&data] (string img_name, string path) {
            __android_log_write(ANDROID_LOG_INFO, "IPCAtrain: Training this image", img_name.c_str());
            //i.e. a matrix in which each column is a vectorized version of the face matrix under consideration
            // Subtract the mean vector from each vector of the data matrix (ie normalize it i guess)
            Mat im = imread(path + img_name, CV_LOAD_IMAGE_COLOR);
            if (im.data == NULL) {
                __android_log_write(ANDROID_LOG_INFO, "IPCAtrain: This image does not exist", img_name.c_str());
                return -1;
            }

            Scalar mean;
            Scalar stddev;
            meanStdDev(im, mean, stddev);
            // cout << mean.val[0] << ", " << stddev.val[0] << endl;
            im = (im.reshape(1, 1) - mean.val[0]) / stddev.val[0];
            data.push_back(im);
            return 0;
        });

        if (err == -1) {
            __android_log_write(ANDROID_LOG_INFO, "IPCAtrain: Something went wrong with training this dir", dir_name.c_str());
        }


        Mat data_mat;
        vconcat(data, data_mat);
        // cout << "data rows/cols" << data_mat.rows << "," << data_mat.cols << endl;

        PCA pca = PCA(data_mat, Mat(), CV_PCA_DATA_AS_ROW, numComponents);
        // cout << "done!   # of principal components: " << pca.eigenvectors.rows << endl;
        // cout << data_mat.total() << endl;

        // Compute the covariance matrix and generate the eigen vectors using the Gram trick
        //....ooorrrr just use PCA
        // Store the eigen vectors and the mean vector in a file, which will be accessed by the IPCAtest function
        save(path + dir_name + ".pca", pca);

        return err;
    });

    if (err == -1) {
        __android_log_write(ANDROID_LOG_INFO, "IPCAtrain", "Something went wrong with training!");
    }

    return err;
}

//------------- Lab 3 Gender ---------------------------------------

JNIEXPORT jint JNICALL Java_com_spencerbarton_lab2_1551_FaceRecognitionActivity_ClassifyGender
    (JNIEnv * env, jobject obj, jstring imPath, jstring modelPath) {

    string imName;
    getJStringContent(env, imPath, imName);
    string modelName;
    getJStringContent(env, modelPath, modelName);


    // imgName is the path and filename of the test image
    Mat im = imread(imName, CV_LOAD_IMAGE_GRAYSCALE);
    Mat normIm;
    normalize(im, normIm, 0, 1, NORM_MINMAX, CV_64FC1);

    // Load filters and other parameters
    float BIAS = -1.4146;

    FILE* stream = fopen(modelName.c_str(), "r");
    int LEN = 43000;
    float SUPPORT_VECT [LEN];
    float val;
    int i;
    for (i = 0; i < LEN; i++) {
        if (fscanf(stream, "%f ", &val) == 1) {
            SUPPORT_VECT[i] = val;
        } else {
            break;
        }
    }
    int supportVectLen = i;
    fclose(stream);

    string msg;
    stringstream ss;
    ss << supportVectLen;
    ss << " ";
    ss << SUPPORT_VECT[0];
    ss << " ";
    ss << SUPPORT_VECT[1];
    string lenS = ss.str();
    if (supportVectLen == 27200) {
        msg = "GOOD " + modelName + " " + lenS;
    } else {
        msg = "BAD " + modelName + " " + lenS;
    }
    __android_log_write(ANDROID_LOG_INFO, "ClassifyGender", msg.c_str());

    // Load Filters
    double data1[20][20] =  {{0.000500999889934383, 0.000879282189965936, 0.00144969124954463, 0.00224532573095950, 0.00326692966156741, 0.00446536341257640, 0.00573364011649561, 0.00691609014781064, 0.00783695685226234, 0.00834239714401161, 0.00834239714401161, 0.00783695685226234, 0.00691609014781064, 0.00573364011649561, 0.00446536341257640, 0.00326692966156741, 0.00224532573095950, 0.00144969124954463, 0.000879282189965936, 0.000500999889934383}, {0.000879282189965936, 0.00154318830228197, 0.00254428737866790, 0.00394066938051325, 0.00573364011649561, 0.00783695685226234, 0.0100628517877900, 0.0121381162218723, 0.0137542876199599, 0.0146413629578099, 0.0146413629578099, 0.0137542876199599, 0.0121381162218723, 0.0100628517877900, 0.00783695685226234, 0.00573364011649561, 0.00394066938051325, 0.00254428737866790, 0.00154318830228197, 0.000879282189965936}, {0.00144969124954463, 0.00254428737866790, 0.00419482071998363, 0.00649706542844890, 0.00945317441860587, 0.0129209574598840, 0.0165908377864322, 0.0200123704012311, 0.0226769865623554, 0.0241395265405821, 0.0241395265405821, 0.0226769865623554, 0.0200123704012311, 0.0165908377864322, 0.0129209574598840, 0.00945317441860587, 0.00649706542844890, 0.00419482071998363, 0.00254428737866790, 0.00144969124954463}, {0.00224532573095950, 0.00394066938051325, 0.00649706542844890, 0.0100628517877900, 0.0146413629578099, 0.0200123704012311, 0.0256963922433502, 0.0309957656249157, 0.0351228038694952, 0.0373880301007363, 0.0373880301007363, 0.0351228038694952, 0.0309957656249157, 0.0256963922433502, 0.0200123704012311, 0.0146413629578099, 0.0100628517877900, 0.00649706542844890, 0.00394066938051325, 0.00224532573095950}, {0.00326692966156741, 0.00573364011649561, 0.00945317441860587, 0.0146413629578099, 0.0213030574019223, 0.0291178271199507, 0.0373880301007363, 0.0450985728737703, 0.0511033780874344, 0.0543992628060583, 0.0543992628060583, 0.0511033780874344, 0.0450985728737703, 0.0373880301007363, 0.0291178271199507, 0.0213030574019223, 0.0146413629578099, 0.00945317441860587, 0.00573364011649561, 0.00326692966156741}, {0.00446536341257640, 0.00783695685226234, 0.0129209574598840, 0.0200123704012311, 0.0291178271199507, 0.0397993508720880, 0.0511033780874344, 0.0616424404966607, 0.0698500360920549, 0.0743549763752049, 0.0743549763752049, 0.0698500360920549, 0.0616424404966607, 0.0511033780874344, 0.0397993508720880, 0.0291178271199507, 0.0200123704012311, 0.0129209574598840, 0.00783695685226234, 0.00446536341257640}, {0.00573364011649561, 0.0100628517877900, 0.0165908377864322, 0.0256963922433502, 0.0373880301007363, 0.0511033780874344, 0.0656180363428691, 0.0791504603443740, 0.0896892216987546, 0.0954736795229797, 0.0954736795229797, 0.0896892216987546, 0.0791504603443740, 0.0656180363428691, 0.0511033780874344, 0.0373880301007363, 0.0256963922433502, 0.0165908377864322, 0.0100628517877900, 0.00573364011649561}, {0.00691609014781064, 0.0121381162218723, 0.0200123704012311, 0.0309957656249157, 0.0450985728737703, 0.0616424404966607, 0.0791504603443740, 0.0954736795229797, 0.108185852260062, 0.115163240264143, 0.115163240264143, 0.108185852260062, 0.0954736795229797, 0.0791504603443740, 0.0616424404966607, 0.0450985728737703, 0.0309957656249157, 0.0200123704012311, 0.0121381162218723, 0.00691609014781064}, {0.00783695685226234, 0.0137542876199599, 0.0226769865623554, 0.0351228038694952, 0.0511033780874344, 0.0698500360920549, 0.0896892216987546, 0.108185852260062, 0.122590631132206, 0.130497047555476, 0.130497047555476, 0.122590631132206, 0.108185852260062, 0.0896892216987546, 0.0698500360920549, 0.0511033780874344, 0.0351228038694952, 0.0226769865623554, 0.0137542876199599, 0.00783695685226234}, {0.00834239714401161, 0.0146413629578099, 0.0241395265405821, 0.0373880301007363, 0.0543992628060583, 0.0743549763752049, 0.0954736795229797, 0.115163240264143, 0.130497047555476, 0.138913384027945, 0.138913384027945, 0.130497047555476, 0.115163240264143, 0.0954736795229797, 0.0743549763752049, 0.0543992628060583, 0.0373880301007363, 0.0241395265405821, 0.0146413629578099, 0.00834239714401161}, {0.00834239714401161, 0.0146413629578099, 0.0241395265405821, 0.0373880301007363, 0.0543992628060583, 0.0743549763752049, 0.0954736795229797, 0.115163240264143, 0.130497047555476, 0.138913384027945, 0.138913384027945, 0.130497047555476, 0.115163240264143, 0.0954736795229797, 0.0743549763752049, 0.0543992628060583, 0.0373880301007363, 0.0241395265405821, 0.0146413629578099, 0.00834239714401161}, {0.00783695685226234, 0.0137542876199599, 0.0226769865623554, 0.0351228038694952, 0.0511033780874344, 0.0698500360920549, 0.0896892216987546, 0.108185852260062, 0.122590631132206, 0.130497047555476, 0.130497047555476, 0.122590631132206, 0.108185852260062, 0.0896892216987546, 0.0698500360920549, 0.0511033780874344, 0.0351228038694952, 0.0226769865623554, 0.0137542876199599, 0.00783695685226234}, {0.00691609014781064, 0.0121381162218723, 0.0200123704012311, 0.0309957656249157, 0.0450985728737703, 0.0616424404966607, 0.0791504603443740, 0.0954736795229797, 0.108185852260062, 0.115163240264143, 0.115163240264143, 0.108185852260062, 0.0954736795229797, 0.0791504603443740, 0.0616424404966607, 0.0450985728737703, 0.0309957656249157, 0.0200123704012311, 0.0121381162218723, 0.00691609014781064}, {0.00573364011649561, 0.0100628517877900, 0.0165908377864322, 0.0256963922433502, 0.0373880301007363, 0.0511033780874344, 0.0656180363428691, 0.0791504603443740, 0.0896892216987546, 0.0954736795229797, 0.0954736795229797, 0.0896892216987546, 0.0791504603443740, 0.0656180363428691, 0.0511033780874344, 0.0373880301007363, 0.0256963922433502, 0.0165908377864322, 0.0100628517877900, 0.00573364011649561}, {0.00446536341257640, 0.00783695685226234, 0.0129209574598840, 0.0200123704012311, 0.0291178271199507, 0.0397993508720880, 0.0511033780874344, 0.0616424404966607, 0.0698500360920549, 0.0743549763752049, 0.0743549763752049, 0.0698500360920549, 0.0616424404966607, 0.0511033780874344, 0.0397993508720880, 0.0291178271199507, 0.0200123704012311, 0.0129209574598840, 0.00783695685226234, 0.00446536341257640}, {0.00326692966156741, 0.00573364011649561, 0.00945317441860587, 0.0146413629578099, 0.0213030574019223, 0.0291178271199507, 0.0373880301007363, 0.0450985728737703, 0.0511033780874344, 0.0543992628060583, 0.0543992628060583, 0.0511033780874344, 0.0450985728737703, 0.0373880301007363, 0.0291178271199507, 0.0213030574019223, 0.0146413629578099, 0.00945317441860587, 0.00573364011649561, 0.00326692966156741}, {0.00224532573095950, 0.00394066938051325, 0.00649706542844890, 0.0100628517877900, 0.0146413629578099, 0.0200123704012311, 0.0256963922433502, 0.0309957656249157, 0.0351228038694952, 0.0373880301007363, 0.0373880301007363, 0.0351228038694952, 0.0309957656249157, 0.0256963922433502, 0.0200123704012311, 0.0146413629578099, 0.0100628517877900, 0.00649706542844890, 0.00394066938051325, 0.00224532573095950}, {0.00144969124954463, 0.00254428737866790, 0.00419482071998363, 0.00649706542844890, 0.00945317441860587, 0.0129209574598840, 0.0165908377864322, 0.0200123704012311, 0.0226769865623554, 0.0241395265405821, 0.0241395265405821, 0.0226769865623554, 0.0200123704012311, 0.0165908377864322, 0.0129209574598840, 0.00945317441860587, 0.00649706542844890, 0.00419482071998363, 0.00254428737866790, 0.00144969124954463}, {0.000879282189965936, 0.00154318830228197, 0.00254428737866790, 0.00394066938051325, 0.00573364011649561, 0.00783695685226234, 0.0100628517877900, 0.0121381162218723, 0.0137542876199599, 0.0146413629578099, 0.0146413629578099, 0.0137542876199599, 0.0121381162218723, 0.0100628517877900, 0.00783695685226234, 0.00573364011649561, 0.00394066938051325, 0.00254428737866790, 0.00154318830228197, 0.000879282189965936}, {0.000500999889934383, 0.000879282189965936, 0.00144969124954463, 0.00224532573095950, 0.00326692966156741, 0.00446536341257640, 0.00573364011649561, 0.00691609014781064, 0.00783695685226234, 0.00834239714401161, 0.00834239714401161, 0.00783695685226234, 0.00691609014781064, 0.00573364011649561, 0.00446536341257640, 0.00326692966156741, 0.00224532573095950, 0.00144969124954463, 0.000879282189965936, 0.000500999889934383}};
    Mat gaussian = Mat(20, 20, CV_64FC1, &data1);
    double data2[20][20] = {{-0.00277781315817819, -0.000359237662020605, -0.00160671417880536, -0.00385014323463490, -0.00728588834955900, -0.0118631355974410, -0.0171775468199948, -0.0224716713704037, -0.0267826578557155, -0.0292106125954545, -0.0292106125954545, -0.0267826578557155, -0.0224716713704037, -0.0171775468199948, -0.0118631355974410, -0.00728588834955899, -0.00385014323463491, -0.00160671417880537, -0.000359237662020607, -0.00277781315817819}, {-0.000359237662020606, 0.00793355986700439, 0.0111564737192117, 0.0146973334523465, 0.0181910473595861, 0.0212525302324025, 0.0236003544710309, 0.0251457587427805, 0.0259926974272043, 0.0263404320203730, 0.0263404320203730, 0.0259926974272043, 0.0251457587427805, 0.0236003544710309, 0.0212525302324025, 0.0181910473595861, 0.0146973334523465, 0.0111564737192117, 0.00793355986700439, -0.000359237662020606}, {-0.00160671417880536, 0.0111564737192117, 0.0152543854683133, 0.0194124354029960, 0.0230332856980673, 0.0255885734507074, 0.0268369271908184, 0.0269505608572379, 0.0264571102013038, 0.0259951163399643, 0.0259951163399642, 0.0264571102013037, 0.0269505608572380, 0.0268369271908184, 0.0255885734507073, 0.0230332856980673, 0.0194124354029960, 0.0152543854683133, 0.0111564737192117, -0.00160671417880536}, {-0.00385014323463490, 0.0146973334523465, 0.0194124354029960, 0.0235977909248100, 0.0263343949101423, 0.0269468993380244, 0.0253602770150044, 0.0222688392074571, 0.0189679708742979, 0.0168627792365434, 0.0168627792365434, 0.0189679708742978, 0.0222688392074570, 0.0253602770150043, 0.0269468993380244, 0.0263343949101423, 0.0235977909248100, 0.0194124354029961, 0.0146973334523465, -0.00385014323463490}, {-0.00728588834955900, 0.0181910473595861, 0.0230332856980673, 0.0263343949101423, 0.0267648609037323, 0.0235189073783451, 0.0168569280903523, 0.00831794614371798, 0.000378102908482848, -0.00440355658661960, -0.00440355658661936, 0.000378102908482648, 0.00831794614371798, 0.0168569280903523, 0.0235189073783450, 0.0267648609037323, 0.0263343949101423, 0.0230332856980673, 0.0181910473595861, -0.00728588834955901}, {-0.0118631355974410, 0.0212525302324024, 0.0255885734507073, 0.0269468993380244, 0.0235189073783450, 0.0144032426830862, 0.000373778942030355, -0.0158678262224746, -0.0302682717152390, -0.0387477324597648, -0.0387477324597649, -0.0302682717152392, -0.0158678262224745, 0.000373778942030595, 0.0144032426830861, 0.0235189073783450, 0.0269468993380244, 0.0255885734507073, 0.0212525302324024, -0.0118631355974410}, {-0.0171775468199948, 0.0236003544710309, 0.0268369271908183, 0.0253602770150045, 0.0168569280903522, 0.000373778942030435, -0.0226686574008566, -0.0481906121494208, -0.0703045136792262, -0.0831773691782714, -0.0831773691782711, -0.0703045136792262, -0.0481906121494213, -0.0226686574008567, 0.000373778942030435, 0.0168569280903522, 0.0253602770150045, 0.0268369271908183, 0.0236003544710309, -0.0171775468199949}, {-0.0224716713704037, 0.0251457587427805, 0.0269505608572380, 0.0222688392074571, 0.00831794614371798, -0.0158678262224743, -0.0481906121494209, -0.0831792268814178, -0.113116785393299, -0.130432060670014, -0.130432060670015, -0.113116785393299, -0.0831792268814177, -0.0481906121494212, -0.0158678262224746, 0.00831794614371814, 0.0222688392074571, 0.0269505608572379, 0.0251457587427804, -0.0224716713704036}, {-0.0267826578557155, 0.0259926974272043, 0.0264571102013038, 0.0189679708742980, 0.000378102908482688, -0.0302682717152388, -0.0703045136792260, -0.113116785393299, -0.149497538119988, -0.170464380798746, -0.170464380798746, -0.149497538119988, -0.113116785393299, -0.0703045136792262, -0.0302682717152389, 0.000378102908482728, 0.0189679708742979, 0.0264571102013037, 0.0259926974272043, -0.0267826578557155}, {-0.0292106125954545, 0.0263404320203730, 0.0259951163399642, 0.0168627792365435, -0.00440355658661944, -0.0387477324597648, -0.0831773691782714, -0.130432060670014, -0.170464380798747, -0.193498511147599, -0.193498511147599, -0.170464380798746, -0.130432060670014, -0.0831773691782714, -0.0387477324597649, -0.00440355658661944, 0.0168627792365433, 0.0259951163399643, 0.0263404320203730, -0.0292106125954545}, {-0.0292106125954545, 0.0263404320203730, 0.0259951163399642, 0.0168627792365434, -0.00440355658661960, -0.0387477324597648, -0.0831773691782714, -0.130432060670014, -0.170464380798747, -0.193498511147599, -0.193498511147599, -0.170464380798746, -0.130432060670014, -0.0831773691782714, -0.0387477324597649, -0.00440355658661940, 0.0168627792365434, 0.0259951163399643, 0.0263404320203730, -0.0292106125954545}, {-0.0267826578557155, 0.0259926974272043, 0.0264571102013038, 0.0189679708742980, 0.000378102908482688, -0.0302682717152392, -0.0703045136792260, -0.113116785393299, -0.149497538119988, -0.170464380798746, -0.170464380798747, -0.149497538119988, -0.113116785393299, -0.0703045136792259, -0.0302682717152389, 0.000378102908482728, 0.0189679708742979, 0.0264571102013038, 0.0259926974272043, -0.0267826578557155}, {-0.0224716713704037, 0.0251457587427805, 0.0269505608572380, 0.0222688392074571, 0.00831794614371798, -0.0158678262224746, -0.0481906121494211, -0.0831792268814175, -0.113116785393299, -0.130432060670014, -0.130432060670015, -0.113116785393299, -0.0831792268814177, -0.0481906121494208, -0.0158678262224746, 0.00831794614371814, 0.0222688392074571, 0.0269505608572379, 0.0251457587427805, -0.0224716713704036}, {-0.0171775468199948, 0.0236003544710309, 0.0268369271908183, 0.0253602770150045, 0.0168569280903523, 0.000373778942030435, -0.0226686574008566, -0.0481906121494208, -0.0703045136792262, -0.0831773691782714, -0.0831773691782711, -0.0703045136792262, -0.0481906121494213, -0.0226686574008564, 0.000373778942030475, 0.0168569280903522, 0.0253602770150045, 0.0268369271908184, 0.0236003544710309, -0.0171775468199948}, {-0.0118631355974410, 0.0212525302324025, 0.0255885734507073, 0.0269468993380244, 0.0235189073783450, 0.0144032426830862, 0.000373778942030515, -0.0158678262224746, -0.0302682717152390, -0.0387477324597644, -0.0387477324597649, -0.0302682717152392, -0.0158678262224745, 0.000373778942030315, 0.0144032426830862, 0.0235189073783450, 0.0269468993380244, 0.0255885734507073, 0.0212525302324025, -0.0118631355974410}, {-0.00728588834955900, 0.0181910473595861, 0.0230332856980673, 0.0263343949101423, 0.0267648609037324, 0.0235189073783450, 0.0168569280903523, 0.00831794614371806, 0.000378102908482848, -0.00440355658661928, -0.00440355658661944, 0.000378102908482808, 0.00831794614371814, 0.0168569280903524, 0.0235189073783450, 0.0267648609037323, 0.0263343949101423, 0.0230332856980673, 0.0181910473595861, -0.00728588834955901}, {-0.00385014323463490, 0.0146973334523465, 0.0194124354029960, 0.0235977909248100, 0.0263343949101423, 0.0269468993380243, 0.0253602770150044, 0.0222688392074571, 0.0189679708742979, 0.0168627792365434, 0.0168627792365434, 0.0189679708742978, 0.0222688392074570, 0.0253602770150045, 0.0269468993380243, 0.0263343949101423, 0.0235977909248100, 0.0194124354029961, 0.0146973334523465, -0.00385014323463490}, {-0.00160671417880537, 0.0111564737192117, 0.0152543854683133, 0.0194124354029960, 0.0230332856980673, 0.0255885734507073, 0.0268369271908184, 0.0269505608572380, 0.0264571102013039, 0.0259951163399643, 0.0259951163399642, 0.0264571102013038, 0.0269505608572379, 0.0268369271908184, 0.0255885734507073, 0.0230332856980673, 0.0194124354029960, 0.0152543854683133, 0.0111564737192117, -0.00160671417880537}, {-0.000359237662020606, 0.00793355986700439, 0.0111564737192117, 0.0146973334523465, 0.0181910473595861, 0.0212525302324025, 0.0236003544710309, 0.0251457587427805, 0.0259926974272043, 0.0263404320203730, 0.0263404320203730, 0.0259926974272043, 0.0251457587427805, 0.0236003544710309, 0.0212525302324025, 0.0181910473595861, 0.0146973334523465, 0.0111564737192117, 0.00793355986700439, -0.000359237662020606}, {-0.00277781315817819, -0.000359237662020605, -0.00160671417880536, -0.00385014323463490, -0.00728588834955900, -0.0118631355974410, -0.0171775468199948, -0.0224716713704037, -0.0267826578557155, -0.0292106125954545, -0.0292106125954545, -0.0267826578557155, -0.0224716713704037, -0.0171775468199948, -0.0118631355974410, -0.00728588834955899, -0.00385014323463491, -0.00160671417880537, -0.000359237662020607, -0.00277781315817819}};
    Mat laplacian = Mat(20, 20, CV_64FC1, &data2);
    double data3[13][25] = {{4.23263543188300e-08, -7.59473641072352e-08, -2.43887533187717e-07, 1.40165635303180e-06, -1.80209866455387e-06, -4.14658558014861e-06, 1.70756700557916e-05, -1.57307685879660e-05, -2.59356527754409e-05, 7.65278438577402e-05, -5.05157537877005e-05, -5.96773117508571e-05, 0.000126173083969074, -5.96773117508571e-05, -5.05157537877005e-05, 7.65278438577402e-05, -2.59356527754409e-05, -1.57307685879660e-05, 1.70756700557916e-05, -4.14658558014861e-06, -1.80209866455387e-06, 1.40165635303180e-06, -2.43887533187717e-07, -7.59473641072352e-08, 4.23263543188300e-08}, {4.87775066375438e-07, -8.75228475606405e-07, -2.81059542224399e-06, 1.61528917772038e-05, -2.07676472463587e-05, -4.77858556244381e-05, 0.000196782506523682, -0.000181283666302397, -0.000298886236663264, 0.000881918008720914, -0.000582150897551765, -0.000687730024681859, 0.00145403697999167, -0.000687730024681859, -0.000582150897551765, 0.000881918008720914, -0.000298886236663264, -0.000181283666302397, 0.000196782506523682, -4.77858556244381e-05, -2.07676472463587e-05, 1.61528917772038e-05, -2.81059542224399e-06, -8.75228475606405e-07, 4.87775066375438e-07}, {3.60419732910773e-06, -6.46711230563728e-06, -2.07676472463585e-05, 0.000119354623501714, -0.000153453310546147, -0.000353092367944374, 0.00145403697999167, -0.00133951518012824, -0.00220848716990312, 0.00651654164109604, -0.00430154564005282, -0.00508167573329322, 0.0107439608150782, -0.00508167573329322, -0.00430154564005282, 0.00651654164109604, -0.00220848716990312, -0.00133951518012824, 0.00145403697999167, -0.000353092367944374, -0.000153453310546147, 0.000119354623501714, -2.07676472463585e-05, -6.46711230563728e-06, 3.60419732910773e-06}, {1.70756700557916e-05, -3.06393534707353e-05, -9.83912532618400e-05, 0.000565468531395047, -0.000727018489995838, -0.00167285201771373, 0.00688881696868803, -0.00634624499215656, -0.0104631891076426, 0.0308735357161285, -0.0203795096029481, -0.0240755458785381, 0.0509018550369012, -0.0240755458785381, -0.0203795096029481, 0.0308735357161285, -0.0104631891076426, -0.00634624499215656, 0.00688881696868803, -0.00167285201771373, -0.000727018489995838, 0.000565468531395047, -9.83912532618400e-05, -3.06393534707353e-05, 1.70756700557916e-05}, {5.18713055508818e-05, -9.30741376806433e-05, -0.000298886236663262, 0.00171774172700488, -0.00220848716990313, -0.00508167573329322, 0.0209263782152853, -0.0192781900805852, -0.0317843620464608, 0.0937855205292046, -0.0619074839310981, -0.0731350507763153, 0.154626182580183, -0.0731350507763153, -0.0619074839310981, 0.0937855205292046, -0.0317843620464608, -0.0192781900805852, 0.0209263782152853, -0.00508167573329322, -0.00220848716990313, 0.00171774172700488, -0.000298886236663262, -9.30741376806433e-05, 5.18713055508818e-05}, {0.000101031507575401, -0.000181283666302399, -0.000582150897551760, 0.00334570403542745, -0.00430154564005283, -0.00989775281133669, 0.0407590192058961, -0.0375487870698783, -0.0619074839310980, 0.182669250892764, -0.120579313848645, -0.142447627991292, 0.301170679449758, -0.142447627991292, -0.120579313848645, 0.182669250892764, -0.0619074839310980, -0.0375487870698783, 0.0407590192058961, -0.00989775281133669, -0.00430154564005283, 0.00334570403542745, -0.000582150897551760, -0.000181283666302399, 0.000101031507575401}, {0.000126173083969074, -0.000226395901630229, -0.000727018489995829, 0.00417827870065793, -0.00537198040753910, -0.0123607974040960, 0.0509018550369012, -0.0468927602646025, -0.0773130912900915, 0.228126287378813, -0.150585339724879, -0.177895559108897, 0.376116662407299, -0.177895559108897, -0.150585339724879, 0.228126287378813, -0.0773130912900915, -0.0468927602646025, 0.0509018550369012, -0.0123607974040960, -0.00537198040753910, 0.00417827870065793, -0.000727018489995829, -0.000226395901630229, 0.000126173083969074}, {0.000101031507575401, -0.000181283666302399, -0.000582150897551760, 0.00334570403542745, -0.00430154564005283, -0.00989775281133669, 0.0407590192058961, -0.0375487870698783, -0.0619074839310980, 0.182669250892764, -0.120579313848645, -0.142447627991292, 0.301170679449758, -0.142447627991292, -0.120579313848645, 0.182669250892764, -0.0619074839310980, -0.0375487870698783, 0.0407590192058961, -0.00989775281133669, -0.00430154564005283, 0.00334570403542745, -0.000582150897551760, -0.000181283666302399, 0.000101031507575401}, {5.18713055508818e-05, -9.30741376806433e-05, -0.000298886236663262, 0.00171774172700488, -0.00220848716990313, -0.00508167573329322, 0.0209263782152853, -0.0192781900805852, -0.0317843620464608, 0.0937855205292046, -0.0619074839310981, -0.0731350507763153, 0.154626182580183, -0.0731350507763153, -0.0619074839310981, 0.0937855205292046, -0.0317843620464608, -0.0192781900805852, 0.0209263782152853, -0.00508167573329322, -0.00220848716990313, 0.00171774172700488, -0.000298886236663262, -9.30741376806433e-05, 5.18713055508818e-05}, {1.70756700557916e-05, -3.06393534707353e-05, -9.83912532618400e-05, 0.000565468531395047, -0.000727018489995838, -0.00167285201771373, 0.00688881696868803, -0.00634624499215656, -0.0104631891076426, 0.0308735357161285, -0.0203795096029481, -0.0240755458785381, 0.0509018550369012, -0.0240755458785381, -0.0203795096029481, 0.0308735357161285, -0.0104631891076426, -0.00634624499215656, 0.00688881696868803, -0.00167285201771373, -0.000727018489995838, 0.000565468531395047, -9.83912532618400e-05, -3.06393534707353e-05, 1.70756700557916e-05}, {3.60419732910773e-06, -6.46711230563728e-06, -2.07676472463585e-05, 0.000119354623501714, -0.000153453310546147, -0.000353092367944374, 0.00145403697999167, -0.00133951518012824, -0.00220848716990312, 0.00651654164109604, -0.00430154564005282, -0.00508167573329322, 0.0107439608150782, -0.00508167573329322, -0.00430154564005282, 0.00651654164109604, -0.00220848716990312, -0.00133951518012824, 0.00145403697999167, -0.000353092367944374, -0.000153453310546147, 0.000119354623501714, -2.07676472463585e-05, -6.46711230563728e-06, 3.60419732910773e-06}, {4.87775066375438e-07, -8.75228475606405e-07, -2.81059542224399e-06, 1.61528917772038e-05, -2.07676472463587e-05, -4.77858556244381e-05, 0.000196782506523682, -0.000181283666302397, -0.000298886236663264, 0.000881918008720914, -0.000582150897551765, -0.000687730024681859, 0.00145403697999167, -0.000687730024681859, -0.000582150897551765, 0.000881918008720914, -0.000298886236663264, -0.000181283666302397, 0.000196782506523682, -4.77858556244381e-05, -2.07676472463587e-05, 1.61528917772038e-05, -2.81059542224399e-06, -8.75228475606405e-07, 4.87775066375438e-07}, {4.23263543188300e-08, -7.59473641072352e-08, -2.43887533187717e-07, 1.40165635303180e-06, -1.80209866455387e-06, -4.14658558014861e-06, 1.70756700557916e-05, -1.57307685879660e-05, -2.59356527754409e-05, 7.65278438577402e-05, -5.05157537877005e-05, -5.96773117508571e-05, 0.000126173083969074, -5.96773117508571e-05, -5.05157537877005e-05, 7.65278438577402e-05, -2.59356527754409e-05, -1.57307685879660e-05, 1.70756700557916e-05, -4.14658558014861e-06, -1.80209866455387e-06, 1.40165635303180e-06, -2.43887533187717e-07, -7.59473641072352e-08, 4.23263543188300e-08}};
    Mat gabor1 = Mat(13, 25, CV_64FC1, &data3);
    double data4[19][19] = {{1.06363946830173e-05, 0.000107215804630270, 0.000121762787712087, -0.000117258869938057, -0.000274635264997171, -9.18554795079350e-05, 7.91160422872178e-05, 5.49143788529746e-05, 4.17602356200797e-06, -3.83537070281120e-06, -8.54743002280769e-07, 3.69578382330271e-10, 1.40446178815422e-08, 1.02591800028680e-09, -1.88183444457953e-11, -3.96718563287025e-12, -9.29460609455038e-14, 1.80013651800941e-15, 8.72433406530246e-17}, {0.000107215804630270, 0.000189904104849878, -0.000285223459978284, -0.00104187498756757, -0.000543480726871998, 0.000730068150502480, 0.000790323132869285, 9.37349017535487e-05, -0.000134265831071499, -4.66673866783056e-05, 3.14705445326226e-08, 1.86520853781485e-06, 2.12495572985964e-07, -6.07908785741784e-09, -1.99875378320106e-09, -7.30344116647302e-11, 2.20608254270144e-12, 1.66750971330522e-13, 1.80013651800934e-15}, {0.000121762787712087, -0.000285223459978284, -0.00162493271217916, -0.00132197635395796, 0.00276963610349199, 0.00467609981480146, 0.000864968271697786, -0.00193234257522661, -0.00104749478551380, 1.10169763064834e-06, 0.000101836935590718, 1.80945415434117e-05, -8.07338915833671e-07, -4.13996372322586e-07, -2.35930746407348e-08, 1.11147201979762e-09, 1.31028243281744e-10, 2.20608254270135e-12, -9.29460609455059e-14}, {-0.000117258869938057, -0.00104187498756758, -0.00132197635395796, 0.00431958954682611, 0.0113742642163108, 0.00328140236225969, -0.0114330789298109, -0.00966608741555554, 1.58555398624738e-05, 0.00228582885387002, 0.000633440375503518, -4.40792112542807e-05, -3.52528499890561e-05, -3.13330021680656e-06, 2.30216141678704e-07, 4.23274324161274e-08, 1.11147201979758e-09, -7.30344116647320e-11, -3.96718563287023e-12}, {-0.000274635264997171, -0.000543480726871999, 0.00276963610349199, 0.0113742642163108, 0.00511775222928262, -0.0278101122097468, -0.0366699254955942, 9.38123710808215e-05, 0.0210932043042764, 0.00911642073552690, -0.000989400676251810, -0.00123410579268131, -0.000171072395336089, 1.96034932918081e-05, 5.62133402220214e-06, 2.30216141678698e-07, -2.35930746407353e-08, -1.99875378320105e-09, -1.88183444457941e-11}, {-9.18554795079352e-05, 0.000730068150502467, 0.00467609981480146, 0.00328140236225969, -0.0278101122097468, -0.0571912774584187, 0.000228191599344027, 0.0800206119651265, 0.0539390681356914, -0.00913000576033301, -0.0177611470208078, -0.00383988594208581, 0.000686264646283065, 0.000306914438330611, 1.96034932918077e-05, -3.13330021680662e-06, -4.13996372322585e-07, -6.07908785741749e-09, 1.02591800028681e-09}, {7.91160422872179e-05, 0.000790323132869289, 0.000864968271697842, -0.0114330789298109, -0.0366699254955942, 0.000228191599344028, 0.124802026713685, 0.131202762313789, -0.0346362097312478, -0.105087264740861, -0.0354337546069584, 0.00987666320837353, 0.00688899243418882, 0.000686264646283051, -0.000171072395336090, -3.52528499890560e-05, -8.07338915833624e-07, 2.12495572985967e-07, 1.40446178815422e-08}, {5.49143788529748e-05, 9.37349017535548e-05, -0.00193234257522658, -0.00966608741555559, 9.38123710808216e-05, 0.0800206119651263, 0.131202762313789, -0.0540194465648908, -0.255616937677088, -0.134423897240500, 0.0584371899021338, 0.0635703432559883, 0.00987666320837339, -0.00383988594208584, -0.00123410579268131, -4.40792112542795e-05, 1.80945415434118e-05, 1.86520853781485e-06, 3.69578382329279e-10}, {4.17602356200799e-06, -0.000134265831071499, -0.00104749478551380, 1.58555398624312e-05, 0.0210932043042764, 0.0539390681356917, -0.0346362097312473, -0.255616937677088, -0.209650668776163, 0.142144108194965, 0.241164770264232, 0.0584371899021334, -0.0354337546069585, -0.0177611470208078, -0.000989400676251797, 0.000633440375503527, 0.000101836935590716, 3.14705445324535e-08, -8.54743002280773e-07}, {-3.83537070281117e-06, -4.66673866783058e-05, 1.10169763064539e-06, 0.00228582885387002, 0.00911642073552696, -0.00913000576033288, -0.105087264740860, -0.134423897240500, 0.142144108194965, 0.376126242499037, 0.142144108194965, -0.134423897240500, -0.105087264740860, -0.00913000576033288, 0.00911642073552696, 0.00228582885387002, 1.10169763064539e-06, -4.66673866783058e-05, -3.83537070281117e-06}, {-8.54743002280773e-07, 3.14705445324535e-08, 0.000101836935590716, 0.000633440375503527, -0.000989400676251797, -0.0177611470208078, -0.0354337546069585, 0.0584371899021334, 0.241164770264232, 0.142144108194965, -0.209650668776163, -0.255616937677088, -0.0346362097312473, 0.0539390681356917, 0.0210932043042764, 1.58555398624312e-05, -0.00104749478551380, -0.000134265831071499, 4.17602356200799e-06}, {3.69578382329279e-10, 1.86520853781485e-06, 1.80945415434118e-05, -4.40792112542795e-05, -0.00123410579268131, -0.00383988594208584, 0.00987666320837339, 0.0635703432559883, 0.0584371899021338, -0.134423897240500, -0.255616937677088, -0.0540194465648908, 0.131202762313789, 0.0800206119651263, 9.38123710808216e-05, -0.00966608741555559, -0.00193234257522658, 9.37349017535548e-05, 5.49143788529748e-05}, {1.40446178815422e-08, 2.12495572985967e-07, -8.07338915833624e-07, -3.52528499890560e-05, -0.000171072395336090, 0.000686264646283051, 0.00688899243418882, 0.00987666320837353, -0.0354337546069584, -0.105087264740861, -0.0346362097312478, 0.131202762313789, 0.124802026713685, 0.000228191599344028, -0.0366699254955942, -0.0114330789298109, 0.000864968271697842, 0.000790323132869289, 7.91160422872179e-05}, {1.02591800028681e-09, -6.07908785741749e-09, -4.13996372322585e-07, -3.13330021680662e-06, 1.96034932918077e-05, 0.000306914438330611, 0.000686264646283065, -0.00383988594208581, -0.0177611470208078, -0.00913000576033301, 0.0539390681356914, 0.0800206119651265, 0.000228191599344027, -0.0571912774584187, -0.0278101122097468, 0.00328140236225969, 0.00467609981480146, 0.000730068150502467, -9.18554795079352e-05}, {-1.88183444457941e-11, -1.99875378320105e-09, -2.35930746407353e-08, 2.30216141678698e-07, 5.62133402220214e-06, 1.96034932918081e-05, -0.000171072395336089, -0.00123410579268131, -0.000989400676251810, 0.00911642073552690, 0.0210932043042764, 9.38123710808215e-05, -0.0366699254955942, -0.0278101122097468, 0.00511775222928262, 0.0113742642163108, 0.00276963610349199, -0.000543480726871999, -0.000274635264997171}, {-3.96718563287023e-12, -7.30344116647320e-11, 1.11147201979758e-09, 4.23274324161274e-08, 2.30216141678704e-07, -3.13330021680656e-06, -3.52528499890561e-05, -4.40792112542807e-05, 0.000633440375503518, 0.00228582885387002, 1.58555398624738e-05, -0.00966608741555554, -0.0114330789298109, 0.00328140236225969, 0.0113742642163108, 0.00431958954682611, -0.00132197635395796, -0.00104187498756758, -0.000117258869938057}, {-9.29460609455059e-14, 2.20608254270135e-12, 1.31028243281744e-10, 1.11147201979762e-09, -2.35930746407348e-08, -4.13996372322586e-07, -8.07338915833671e-07, 1.80945415434117e-05, 0.000101836935590718, 1.10169763064834e-06, -0.00104749478551380, -0.00193234257522661, 0.000864968271697786, 0.00467609981480146, 0.00276963610349199, -0.00132197635395796, -0.00162493271217916, -0.000285223459978284, 0.000121762787712087}, {1.80013651800934e-15, 1.66750971330522e-13, 2.20608254270144e-12, -7.30344116647302e-11, -1.99875378320106e-09, -6.07908785741784e-09, 2.12495572985964e-07, 1.86520853781485e-06, 3.14705445326226e-08, -4.66673866783056e-05, -0.000134265831071499, 9.37349017535487e-05, 0.000790323132869285, 0.000730068150502480, -0.000543480726871998, -0.00104187498756757, -0.000285223459978284, 0.000189904104849878, 0.000107215804630270}, {8.72433406530246e-17, 1.80013651800941e-15, -9.29460609455038e-14, -3.96718563287025e-12, -1.88183444457953e-11, 1.02591800028680e-09, 1.40446178815422e-08, 3.69578382330271e-10, -8.54743002280769e-07, -3.83537070281120e-06, 4.17602356200797e-06, 5.49143788529746e-05, 7.91160422872178e-05, -9.18554795079350e-05, -0.000274635264997171, -0.000117258869938057, 0.000121762787712087, 0.000107215804630270, 1.06363946830173e-05}};
    Mat gabor2 = Mat(19, 19, CV_64FC1, &data4);
    double data5[25][13] = {{4.23263543188301e-08, 4.87775066375439e-07, 3.60419732910774e-06, 1.70756700557916e-05, 5.18713055508819e-05, 0.000101031507575401, 0.000126173083969074, 0.000101031507575401, 5.18713055508818e-05, 1.70756700557916e-05, 3.60419732910773e-06, 4.87775066375437e-07, 4.23263543188298e-08}, {-7.59473641072352e-08, -8.75228475606408e-07, -6.46711230563729e-06, -3.06393534707353e-05, -9.30741376806433e-05, -0.000181283666302399, -0.000226395901630229, -0.000181283666302399, -9.30741376806431e-05, -3.06393534707353e-05, -6.46711230563728e-06, -8.75228475606404e-07, -7.59473641072349e-08}, {-2.43887533187717e-07, -2.81059542224399e-06, -2.07676472463585e-05, -9.83912532618400e-05, -0.000298886236663262, -0.000582150897551760, -0.000727018489995829, -0.000582150897551760, -0.000298886236663262, -9.83912532618399e-05, -2.07676472463585e-05, -2.81059542224398e-06, -2.43887533187716e-07}, {1.40165635303181e-06, 1.61528917772038e-05, 0.000119354623501714, 0.000565468531395047, 0.00171774172700488, 0.00334570403542745, 0.00417827870065793, 0.00334570403542745, 0.00171774172700488, 0.000565468531395047, 0.000119354623501714, 1.61528917772038e-05, 1.40165635303180e-06}, {-1.80209866455388e-06, -2.07676472463588e-05, -0.000153453310546147, -0.000727018489995838, -0.00220848716990313, -0.00430154564005284, -0.00537198040753910, -0.00430154564005283, -0.00220848716990313, -0.000727018489995837, -0.000153453310546147, -2.07676472463587e-05, -1.80209866455387e-06}, {-4.14658558014861e-06, -4.77858556244381e-05, -0.000353092367944374, -0.00167285201771373, -0.00508167573329323, -0.00989775281133670, -0.0123607974040960, -0.00989775281133669, -0.00508167573329322, -0.00167285201771372, -0.000353092367944374, -4.77858556244381e-05, -4.14658558014861e-06}, {1.70756700557916e-05, 0.000196782506523682, 0.00145403697999167, 0.00688881696868803, 0.0209263782152853, 0.0407590192058962, 0.0509018550369012, 0.0407590192058961, 0.0209263782152853, 0.00688881696868802, 0.00145403697999167, 0.000196782506523682, 1.70756700557916e-05}, {-1.57307685879660e-05, -0.000181283666302397, -0.00133951518012824, -0.00634624499215656, -0.0192781900805852, -0.0375487870698783, -0.0468927602646025, -0.0375487870698783, -0.0192781900805852, -0.00634624499215656, -0.00133951518012824, -0.000181283666302397, -1.57307685879660e-05}, {-2.59356527754409e-05, -0.000298886236663264, -0.00220848716990313, -0.0104631891076426, -0.0317843620464608, -0.0619074839310980, -0.0773130912900915, -0.0619074839310980, -0.0317843620464608, -0.0104631891076426, -0.00220848716990315, -0.000298886236663268, -2.59356527754412e-05}, {7.65278438577402e-05, 0.000881918008720914, 0.00651654164109604, 0.0308735357161285, 0.0937855205292046, 0.182669250892764, 0.228126287378813, 0.182669250892764, 0.0937855205292046, 0.0308735357161285, 0.00651654164109604, 0.000881918008720914, 7.65278438577402e-05}, {-5.05157537877009e-05, -0.000582150897551769, -0.00430154564005285, -0.0203795096029481, -0.0619074839310981, -0.120579313848645, -0.150585339724879, -0.120579313848645, -0.0619074839310977, -0.0203795096029480, -0.00430154564005280, -0.000582150897551762, -5.05157537877002e-05}, {-5.96773117508566e-05, -0.000687730024681857, -0.00508167573329320, -0.0240755458785380, -0.0731350507763151, -0.142447627991292, -0.177895559108897, -0.142447627991292, -0.0731350507763155, -0.0240755458785382, -0.00508167573329324, -0.000687730024681864, -5.96773117508575e-05}, {0.000126173083969074, 0.00145403697999167, 0.0107439608150782, 0.0509018550369012, 0.154626182580183, 0.301170679449758, 0.376116662407299, 0.301170679449758, 0.154626182580183, 0.0509018550369012, 0.0107439608150782, 0.00145403697999167, 0.000126173083969074}, {-5.96773117508575e-05, -0.000687730024681864, -0.00508167573329324, -0.0240755458785382, -0.0731350507763155, -0.142447627991292, -0.177895559108897, -0.142447627991292, -0.0731350507763151, -0.0240755458785380, -0.00508167573329320, -0.000687730024681857, -5.96773117508566e-05}, {-5.05157537877002e-05, -0.000582150897551762, -0.00430154564005280, -0.0203795096029480, -0.0619074839310977, -0.120579313848645, -0.150585339724879, -0.120579313848645, -0.0619074839310981, -0.0203795096029481, -0.00430154564005285, -0.000582150897551769, -5.05157537877009e-05}, {7.65278438577402e-05, 0.000881918008720914, 0.00651654164109604, 0.0308735357161285, 0.0937855205292046, 0.182669250892764, 0.228126287378813, 0.182669250892764, 0.0937855205292046, 0.0308735357161285, 0.00651654164109604, 0.000881918008720914, 7.65278438577402e-05}, {-2.59356527754412e-05, -0.000298886236663268, -0.00220848716990315, -0.0104631891076426, -0.0317843620464608, -0.0619074839310980, -0.0773130912900915, -0.0619074839310980, -0.0317843620464608, -0.0104631891076426, -0.00220848716990313, -0.000298886236663264, -2.59356527754409e-05}, {-1.57307685879660e-05, -0.000181283666302397, -0.00133951518012824, -0.00634624499215656, -0.0192781900805852, -0.0375487870698783, -0.0468927602646025, -0.0375487870698783, -0.0192781900805852, -0.00634624499215656, -0.00133951518012824, -0.000181283666302397, -1.57307685879660e-05}, {1.70756700557916e-05, 0.000196782506523682, 0.00145403697999167, 0.00688881696868802, 0.0209263782152853, 0.0407590192058961, 0.0509018550369012, 0.0407590192058962, 0.0209263782152853, 0.00688881696868803, 0.00145403697999167, 0.000196782506523682, 1.70756700557916e-05}, {-4.14658558014861e-06, -4.77858556244381e-05, -0.000353092367944374, -0.00167285201771372, -0.00508167573329322, -0.00989775281133669, -0.0123607974040960, -0.00989775281133670, -0.00508167573329323, -0.00167285201771373, -0.000353092367944374, -4.77858556244381e-05, -4.14658558014861e-06}, {-1.80209866455387e-06, -2.07676472463587e-05, -0.000153453310546147, -0.000727018489995837, -0.00220848716990313, -0.00430154564005283, -0.00537198040753910, -0.00430154564005284, -0.00220848716990313, -0.000727018489995838, -0.000153453310546147, -2.07676472463588e-05, -1.80209866455388e-06}, {1.40165635303180e-06, 1.61528917772038e-05, 0.000119354623501714, 0.000565468531395047, 0.00171774172700488, 0.00334570403542745, 0.00417827870065793, 0.00334570403542745, 0.00171774172700488, 0.000565468531395047, 0.000119354623501714, 1.61528917772038e-05, 1.40165635303181e-06}, {-2.43887533187716e-07, -2.81059542224398e-06, -2.07676472463585e-05, -9.83912532618399e-05, -0.000298886236663262, -0.000582150897551760, -0.000727018489995829, -0.000582150897551760, -0.000298886236663262, -9.83912532618400e-05, -2.07676472463585e-05, -2.81059542224399e-06, -2.43887533187717e-07}, {-7.59473641072349e-08, -8.75228475606404e-07, -6.46711230563728e-06, -3.06393534707353e-05, -9.30741376806431e-05, -0.000181283666302399, -0.000226395901630229, -0.000181283666302399, -9.30741376806433e-05, -3.06393534707353e-05, -6.46711230563729e-06, -8.75228475606408e-07, -7.59473641072352e-08}, {4.23263543188298e-08, 4.87775066375437e-07, 3.60419732910773e-06, 1.70756700557916e-05, 5.18713055508818e-05, 0.000101031507575401, 0.000126173083969074, 0.000101031507575401, 5.18713055508819e-05, 1.70756700557916e-05, 3.60419732910774e-06, 4.87775066375439e-07, 4.23263543188301e-08}};
    Mat gabor3 = Mat(25, 13, CV_64FC1, &data5);;

    ss.str("");
    ss << sum(gaussian);
    ss << "\n";
    ss << gaussian;
    msg = ss.str();
    __android_log_write(ANDROID_LOG_INFO, "ClassifyGender Gaussian", msg.c_str());

    ss.str("");
    ss << sum(laplacian);
    ss << "\n";
    ss << laplacian;
    msg = ss.str();
    __android_log_write(ANDROID_LOG_INFO, "ClassifyGender Lap", msg.c_str());

    ss.str("");
    ss << sum(gabor1);
    ss << "\n";
    ss << gabor1;
    msg = ss.str();
    __android_log_write(ANDROID_LOG_INFO, "ClassifyGender Gab1", msg.c_str());

    ss.str("");
    ss << sum(gabor2);
    ss << "\n";
    ss << gabor2;
    msg = ss.str();
    __android_log_write(ANDROID_LOG_INFO, "ClassifyGender Gab2", msg.c_str());

    ss.str("");
    ss << sum(gabor3);
    ss << "\n";
    ss << gabor3;
    msg = ss.str();
    __android_log_write(ANDROID_LOG_INFO, "ClassifyGender Gab3", msg.c_str());

    // Get features
    Mat flt1(normIm.rows, normIm.cols, CV_64FC1);
    filter2D(normIm, flt1, -1, gaussian, Point( -1, -1 ), 0, BORDER_CONSTANT);

    ss.str("");
    ss << gaussian.at<double>(0,0);
    ss << " ";
    ss << normIm.at<double>(0,0);
    ss << " ";
    ss << flt1.at<double>(0,0);
    msg = ss.str();
    __android_log_write(ANDROID_LOG_INFO, "ClassifyGender PostFilt", msg.c_str());

    flt1 = flt1.reshape(0,1);

    Mat flt2(normIm.rows, normIm.cols, CV_64FC1);
    filter2D(normIm,flt2,-1,laplacian, Point( -1, -1 ),0,BORDER_CONSTANT);
    flt2 = flt2.reshape(0,1);
    Mat flt3(normIm.rows, normIm.cols, CV_64FC1);
    filter2D(normIm,flt3,-1,gabor1, Point( -1, -1 ),0,BORDER_CONSTANT);
    flt3 = flt3.reshape(0,1);
    Mat flt4(normIm.rows, normIm.cols, CV_64FC1);
    filter2D(normIm,flt4,-1,gabor2, Point( -1, -1 ),0,BORDER_CONSTANT);
    flt4 = flt4.reshape(0,1);
    Mat flt5(normIm.rows, normIm.cols, CV_64FC1);
    filter2D(normIm,flt5,-1,gabor3, Point( -1, -1 ),0,BORDER_CONSTANT);
    flt5 = flt5.reshape(0,1);

    // Concate features
    Mat H;
    vector<Mat> matrices = { flt1, flt2, flt3, flt4, flt5 };
    hconcat(matrices, H);

    ss.str("");
    ss << normIm.rows;
    ss << " ";
    ss << normIm.cols;
    ss << " ";
    ss << flt1.cols;
    ss << " ";
    ss << flt2.cols;
    ss << " ";
    ss << flt3.cols;
    ss << " ";
    ss << flt4.cols;
    ss << " ";
    ss << flt5.cols;
    ss << " Overall ";
    ss << H.rows;
    ss << " ";
    ss << H.cols;
    msg = ss.str();
    __android_log_write(ANDROID_LOG_INFO, "ClassifyGender Filters", msg.c_str());

    // Calculate SVM dist
    float d = 2*BIAS;
    for(int i = 0; i < supportVectLen; i++ ) {
        d += SUPPORT_VECT[i] * H.at<double>(0,i);
    }

    ss.str("");
    ss << d;
    msg = ss.str();
    __android_log_write(ANDROID_LOG_INFO, "ClassifyGender Result", msg.c_str());

    if (d > 0) {
        return 1;
    }
    return -1;
}
